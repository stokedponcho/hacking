#+TITLE: Hacking - README
#+STARTUP:OVERVIEW

* Setup
** Guest

	#+begin_src shell
		sudo apt install spice-vdagent

		sudo systemctl enable serial-getty@ttyS0.service
		sudo systemctl start serial-getty@ttyS0.service
	#+end_src

** Host

	 #+begin_src shell
		 vish list
		 virsh console <guest>
	 #+end_src

	#+begin_src shell
		pacman -S net-tools gnu-netcat bridge-tools
	#+end_src

** TryHackMe

	 #+begin_src shell
		 mkdir tryhackme
		 sudo mount -t 9p -o trans=virtio /media/tryhackme tryhackme/
		 nmcli connection import type openvpn file tryhackme/JoltedSloth.ovpn
	 #+end_src

* Reconnaissance
** Google Dorking

	 It's legal! It's all index, publicy available information.

*** Basic Operators

		| Operator                        | Description                                |
		|---------------------------------+-------------------------------------------|
		| Single word vs. combining words | batman / batman dark knight                |
		| Using the ""                    | "dark knight" batman                       |
		| Boolean operators               | batman AND "dark knight"                   |
		| Special Characters              | batman -joker, batman | "dark knight"     |

*** Advanced Operators

		| Operator    | Action                                                                     |
		|-------------+----------------------------------------------------------------------------|
		| cache:      | Displays Google's cached version.                                          |
		| link:       | Shows a list o web pages that have links to your target.                   |
		| related:    | Smilar web pages.                                                          |
		| info:       | View information Google has on the target.                                 |
		| site:       | Limits results to just the domain listed.                                  |
		| allintitle: | Limits resulst to those *websites* with ALL the search words in the title. |
		| intitle:    | Limits results to *documents* that contain the search word in the title.   |
		| allinurl:   | Limits results to only those *webpages* with ALL search words in the URL   |
		| inurl:      | Limits results to *documents* that contain the search word in the URL.     |
		| intext:     | Limits results to *documents* that contain the search word in text.        |
		| filetype:   | Search for a file by its extension                                         |

*** The Google Hacking Database

		https://www.exploit-db.com/google-hacking-database

		The Google Hacking Database (GHDB) is a categorized index of Internet search engine queries designed to uncover interesting, and usually sensitive, information made publicly available on the Internet.

*** Other Google Hacking Tools

		- Goolink Scanner
		- Google Hack Honeypot
		- SearchDiggity
		- GooScan
		- MetaGoofil
		- SiteDigger

** Shodan.io

	 Shodan.io is a search engine for the Internet of Things.

	 [https://www.shodan.io/]
	 [https://skerritt.blog/shodan/]

	| Operator | Description          | Example       |
	|----------+----------------------+---------------|
	| asn:     | Filters on AS Number | asn:ASxxx     |
	| product: | Filters on product   | product:MYSQL |

*** Dorking

		[https://github.com/humblelad/Shodan-Dorks]

*** API

		[https://developer.shodan.io/api/clients]

*** Browser Extension

	Shodan as a web browser extension.
	[https://chrome.google.com/webstore/detail/shodan/jjalcfnidlmpjhdfepjhjbhnhkbgleap]

** Sublist3r                                     :enumeration:reconnaissance:

 Sublist3r is a Python tool designed to enumerate subdomains of websites using OSINT.

 [https://github.com/aboul3la/Sublist3r]

 *There's a pretty good chance ISPs are not going to like recon activities and neither will most search engines. Unlikely to get into trouble, however, Google is likely to impose a temporary CAPTCHA imposed on searches in the following hour.*

 An alternative is to use [https://dnsdumpster.com/].

| Switch        | Description                                       |
|---------------+---------------------------------------------------|
| -d, --domain  | Domain name to enumerate subdomains of            |
| -e, --engines | Specifiy a commma-separaed list of search engines |
| -o, --output  | Save the result to text file                      |

** WiGLE.net: Wireless Network Mapping

	 WiGLE is a website for collecting information about the different wireless hotspots around the world.

	 [https://www.wigle.net/]

* Network utilities
** nmap                                                        :network:scan:

	 #+begin_src shell
		 nmap -p- -T4 <ip>
		 nmap -sC -sV -p<ports> <ip>

		 ports=$(nmap -p- -T4 192.168.1.1 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
	 #+end_src

*** Scans

		| Switch | Description          |
		|--------+----------------------|
		| -sT    | TCP Connect Scan     |
		| -sS    | Syn "Half-open" Scan |
		| -sU    | UDP scan             |

*** Port specification

		| Switch | Description              | Example                   |
		|--------+--------------------------+---------------------------|
		| -p     | Port or range            | nmap -p 22-80 192.168.1.1 |
		| -p-    | Scan all ports           | nmap -p- 192.168.1.1      |
		| -F     | Fast port scan (top 100) | nmap -F 192.168.1.1       |

*** Service and version detection

		| Switch | Description                                                                                     | Example              |
		|--------+-------------------------------------------------------------------------------------------------+----------------------|
		| -A     | "Aggressive scan". Enables OS detection, version detection, script scanning, and traceroute.    | nmap -A 192.168.1.1  |
		| -O     | Enable OS detection.                                                                            | nmap -O 192.168.1.1  |
		| -sC    | Performs a script scan using the default set of scripts. Contains scripts considered intrusive. | nmap -sC 192.168.1.1 |
		| -sV    | Detect the version of services                                                                  | nmap -sV 192.168.1.1 |

*** Output

		| Switch  | Description             | Example             |
		|---------+-------------------------+---------------------|
		| -oN     | Normal output           |                     |
		| -oX     | XML output              |                     |
		| -oG     | Grepable output         |                     |
		| -oA     | Output to all formats   |                     |
		| -v, -vv | Verbosity               |                     |
		| -n      | Never do DNS resolution | nmap -n 192.168.1.1 |
		| --open  | Output only open port   |                     |

** Netcat                                                           :network:

	 #+begin_src shell
		 nc -lnvp 9999
	 #+end_src

	 | Switch | Description                            |
	 |--------+----------------------------------------|
	 | -l     | listen mode, for inbound connects      |
	 | -p     | local port number                      |
	 | -e     | specify filename to exec after connect |
	 | -n     | numeric only IP addresses, no DNS      |
	 | -u     | UDP mode                               |

** RustScan                                                    :network:scan:

	 RustScan is a modern take on the port scanner. Sleek & fast. All while providing extensive extendability to you.

	 https://github.com/RustScan/RustScan

	 Capable of scanning targets in less than a second, extensible scripting language allowing you to write scripts in Python, and more. (TryHackMe)

* Multimedia
** exiftool

	 ExifTool is a free and open-source software program for reading, writing, and manipulating image, audio, video, and PDF metadata.

	 #+begin_src shell
		 sudo apt install exiftool
		 exiftool image
	 #+end_src

* Enumeration
** Samba
*** smbmap                                                :samba:enumeration:

		#+begin_src shell
			smbmap -H 192.168.1.1
		#+end_src

		| Options | Description                   |
		|---------+-------------------------------|
		| -u      | Username to authenticate with |
		| -p      | Password to authenticate with |
		| -H      | IP of host                    |

*** smbclient                                             :samba:enumeration:

		ftp-like client to access SMB/CIFS resources on servers.

		#+begin_src shell
			smbclient -L \\\\192.168.1.1
		#+end_src

		| Option | Description                         |
		|--------+-------------------------------------|
		| -I     | Destination IP                      |
		| -u     | Username to authenticate with       |
		| -p     | Password to authenticate with       |
		| -N     | Suppress the normal password prompt |

*** impacket                                                    :enumeration:

		Impacket is a collection of Python classes for working with network protocols, with a collection of extremely useful windows scripts.

		[https://github.com/SecureAuthCorp/impacket]

		Note: impacket has scripts that use other protocols and services besides samba. (TryHackMe)

** Web
*** nikto                                                   :web:enumeration:

		`nikto` is a popular web scanning tool that allows users to find common web vulnerabilities. It is commonly used to check for common CVE's such as shellshock, and to get general information about the web server that you're enumerating. (TryHackMe)
		#+end_quote

	 | Option        | Description                                     | Example           |
	 |---------------+-------------------------------------------------+-------------------|
	 | -h, -host     | Host(s) to target                               | -host 192.168.1.1 |
	 | -id           | ID and password to use for basic authentication | -id "id:passwod"  |
	 | -p            | Set port to scan                                |                   |
	 | -ssl          | Only test SSL on the ports specified            |                   |
	 | -nossl        | Do not use SSL to connect to the server         |                   |
	 | -until        | Run until the specified time or duration        |                   |
	 | -list-plugins | List all plugins available                      |                   |
	 | -Plugins      | Select which plugins to run on the target       | -Plugins outdated |

*** dirsearch                                               :web:enumeration:

		#+begin_quote
		An advanced command-line tool designed to brute force directories and files in webservers, AKA web path scanner
		#+end_quote

		[https://github.com/maurosoria/dirsearch]

		#+begin_src shell
			sudo apt-get install dirsearch

			dirsearch -u http://10.10.10.28 -w /usr/share/wordlists/dirb/common.txt
		#+end_src

	 | Switch          | Description                               | Example                                                     |
	 |-----------------+-------------------------------------------+-------------------------------------------------------------|
	 | -u, --url       | Target URL                                | dirsearch -u http://192.168.1.1                             |
	 | -w, --wordlists | Customize wordlists (separated by commas) | dirsearch -u TARGET -w /usr/share/wordlists/dirb/common.txt |

*** gobuster                                                :web:enumeration:

		A web path scanner.

		#+begin_src shell
			sudo apt-get install gobuster
			gobuster dir -u http://192.168.1.1 -w /usr/share/wordlists/dirb/common.txt
		#+end_src

	 | Commands | Description                          | Example                            |
	 |----------+--------------------------------------+------------------------------------|
	 | dir      | Uses directory/file enumeration mode | gobuster dir -u http://192.168.1.1 |

	 | Flag           | Description |
	 |----------------+-------------|
	 | -w, --wordlist |             |

**** dir

		 | Flag | Description                     |
		 |------+---------------------------------|
		 | -x   | File extension(s) to search for |

*** OWASP Zap Scanner

		ZAP is an easy to use integrated penetration testing tool for finding vulnerabilities in web applications.

		In Kali Linux, can be started with 'owasp-zap', 'zaproxy' or via the GUI (menu).

		Set 'URL to attack'.

* Exploitation
** Reverse shells

	 In Kali, there are some in `/usr/share/webshells`.

** searchsploit

	 Allows to search through exploits and shellcodes using one or more terms from Exploit-DB.

	 In Kali, files are located under '/usr/shared/exploitdb'.

	 #+begin_src shell
		 searchsploit wordpress
	 #+end_src

	 | Option       | Description                                            |
	 |--------------+--------------------------------------------------------|
	 | -w, --www    | Show URLs to exploit-db.com rather than the local path |
	 | -m, --mirror | Copy an expoit to the current directory                |

* Privilege escalation
** Linux

	 [https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/]
	 [https://github.com/rebootuser/LinEnum]
	 [https://github.com/diego-treitos/linux-smart-enumeration/blob/master/lse.sh]
	 [https://github.com/mzet-/linux-exploit-suggester]

*** GTFOBins

		#+begin_quote
		GTFOBins is a curated list of Unix binaries that can be used to bypass local security restrictions in misconfigured systems.
		#+end_quote

		[https://gtfobins.github.io/]

*** sudo

		| Switch     | Description                                        |
		|------------+----------------------------------------------------|
		| -l, --list | list user's privileges or check a specific command |

** Windows

	[https://www.fuzzysecurity.com/tutorials/16.html]
	[https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp]
	[https://github.com/411Hall/JAWS]
* Cracking
** Remote
*** Hydra

		Hydra is a brute force online password cracking program; a quick system login password 'hacking' tool. (TryHackMe)

		- https://github.com/vanhauser-thc/thc-hydra
		- https://en.kali.tools/?p=220&PageSpeed=noscript

**** SSH

		 #+begin_src shell
			 hydra -l <username> -P <path to passwords> 192.168.1.1 -t 4 ssh
		 #+end_src

		 | Option | Description                                   |
		 |--------+-----------------------------------------------|
		 | -l, -L | LOGIN or FILE containing several logins       |
		 | -p, -P | PASSWORD or FILE containing several passwords |
		 | -t     | number of threads to use                      |

**** Web Form

		 #+begin_src shell
			 hydra -l <username> -P <path to passwords> 192.168.1.1 http[s]-{get|post}-form "/login:username=^USER^&password=^PASS^:F=incorrect" -V
		 #+end_src

		 | Option           | Description                                   |
		 |------------------+-----------------------------------------------|
		 | -l, -L           | LOGIN or FILE containing several logins       |
		 | -p, -P           | PASSWORD or FILE containing several passwords |
		 | :username=^USER^ | username form field and placeholder           |
		 | :password=^PASS^ | password form field and placeholder           |
		 | :F=incorrect     | incorrect password response                   |

** Hash Cracking

	 Note: Different hashing algorithms treat salts differently. Some prepend them and some append them. Research what it is you're trying to crack, and make the distinction. (TryHackMe)

*** hashid                                                         :cracking:

		Identify the different types of hashes used to encrypt data.

*** hashcat                                                        :cracking:

		[https://hashcat.net/wiki/doku.php?id=example_hashes]

		| Flag | Description               |
		|------+---------------------------|
		| -m   | Sets the mode (hash-type) |
		| -a   | Sets the attack mode      |

*** John the Ripper                                                :cracking:

		| Flag           | Description                                        |
		|----------------+----------------------------------------------------|
		| -list:formats  | List available formats                             |
		| -format:FORMAT | Allows to override the ciphertext format detection |
		| -wordlist:FILE | Enable the wordlist mode, reading words from FILE. |

		Some file types can be "converted to hash" crackable by john with the following tools:
		- zip2john
		- gpg2john
		- /usr/share/john: collection of scripts for many other (ssh, luks, 7z...)

**** Example

		Cracking zip file.

		#+begin_src shell
			zip2john target.zip > target.zip.hashes
			john target.zip.hashes -w /usr/share/wordlists/rockyou.txt
		#+end_src

* SQL Injection
*** sqlmap                                                        :injection:

		[https://www.owasp.org/index.php/SQL_Injection]

		sqlmap-cheat-sheet:
		[https://gist.github.com/jkullick/03b98b1e44f03986c5d1fc69c092220d]

		| Option      | Description                                        |
		|-------------+----------------------------------------------------|
		| --batch     | Never ask for user input, use the default behavior |
		| -u          | Url to check                                       |
		| -p          | Testable parameter(s)                              |
		| -data       | Data string to be ssent through POST               |
		| --dbs       | Enumerate databases                                |
		| --tables    | Enumerate tables                                   |
		| --columns   | Enumerate columns                                  |
		| --passwords | Enumerate passwords                                |
		| -D          | Database to enumerate                              |
		| -T          | Table to enumerate                                 |
		| -C          | Column to enumerate                                |
		| --os-shell  | Prompt for an interative operating system shell    |
